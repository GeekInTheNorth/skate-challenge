@model AllInSkateChallenge.Features.Framework.Models.PageViewModel<AllInSkateChallenge.Features.Statistics.EventStatisticsViewModel>

@using AllInSkateChallenge.Features.Statistics;
@using AllInSkateChallenge.Features.Statistics.Leaders;

@{
    Layout = "_PageViewModelLayout";
}

@if (!Model.HasPaid)
{
    <div class="row">
        <div class="col-xl-12">
            <div class="alert alert-warning" role="alert">
                Please note that Roller Girl Gang CIC has either not yet received or not yet processed your Virtual Skate Marathon entry fee. Your progress will not be included in the statistics below.
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-md-6">
        <div class="card border-allin-green mb-3">
            <h5 class="card-header bg-allin-green text-dark">Best Top Speed</h5>
            <div class="card-body row">
                <div class="col-2 align-middle">
                    <img src="@Model.Content.BestTopSpeed.SkaterProfile" alt="@Model.Content.BestTopSpeed.SkaterName Profile Image" class="leaderboard-profile" />
                </div>
                <div class="col-4 align-middle">
                    @Model.Content.BestTopSpeed.SkaterName
                </div>
                <div class="col-4 align-middle">
                    @Model.Content.BestTopSpeed.Statistic
                </div>
                <div class="col-2 align-middle">
                    <a class="btn btn-primary btn-sm" asp-controller="StatisticLeaders" asp-action="Index" asp-route-statisticType="@StatisticType.BestTopSpeed.ToString()" title="View Top Speed Leaderboard">
                        <img src="~/images/open-iconic/list.svg" alt="View Top Speed Leaderboard" />
                    </a>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card border-allin-green mb-3">
            <h5 class="card-header bg-allin-green text-dark">Best Average Speed (30 mins or more)</h5>
            <div class="card-body row">
                @if(Model.Content.BestAverageSpeed is not null)
                {
                    <div class="col-2 align-middle">
                        <img src="@Model.Content.BestAverageSpeed.SkaterProfile" alt="@Model.Content.BestAverageSpeed.SkaterName Profile Image" class="leaderboard-profile" />
                    </div>
                    <div class="col-4 align-middle">
                        @Model.Content.BestAverageSpeed.SkaterName
                    </div>
                    <div class="col-4 align-middle">
                        @Model.Content.BestAverageSpeed.Statistic
                    </div>
                    <div class="col-2 align-middle">
                        <a class="btn btn-primary btn-sm" asp-controller="StatisticLeaders" asp-action="Index" asp-route-statisticType="@StatisticType.BestAverageSpeed.ToString()" title="View Best Average Speed Leaderboard">
                            <img src="~/images/open-iconic/list.svg" alt="View Best Average Speed Leaderboard" />
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="card border-allin-green mb-3">
            <h5 class="card-header bg-allin-green text-dark">Greatest Climb in One Session</h5>
            <div class="card-body row">
                <div class="col-2">
                    <img src="@Model.Content.GreatestClimb.SkaterProfile" alt="@Model.Content.GreatestClimb.SkaterName Profile Image" class="leaderboard-profile" />
                </div>
                <div class="col-4 align-middle">
                    @Model.Content.GreatestClimb.SkaterName
                </div>
                <div class="col-4 align-middle">
                    @Model.Content.GreatestClimb.Statistic
                </div>
                <div class="col-2 align-middle">
                    <a class="btn btn-primary btn-sm" asp-controller="StatisticLeaders" asp-action="Index" asp-route-statisticType="@StatisticType.GreatestElevationGain.ToString()" title="View Greatest Climbs Leaderboard">
                        <img src="~/images/open-iconic/list.svg" alt="View Top Speed Leaderboard" />
                    </a>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card border-allin-green mb-3">
            <h5 class="card-header bg-allin-green text-dark">Skyborn Skater (Highest Altitude)</h5>
            <div class="card-body row">
                <div class="col-2">
                    <img src="@Model.Content.SkybornSkater.SkaterProfile" alt="@Model.Content.SkybornSkater.SkaterName Profile Image" class="leaderboard-profile" />
                </div>
                <div class="col-4 align-middle">
                    @Model.Content.SkybornSkater.SkaterName
                </div>
                <div class="col-4 align-middle">
                    @Model.Content.SkybornSkater.Statistic
                </div>
                <div class="col-2 align-middle">
                    <a class="btn btn-primary btn-sm" asp-controller="StatisticLeaders" asp-action="Index" asp-route-statisticType="@StatisticType.HighestElevation.ToString()" title="View Highest Altitude Leaderboard">
                        <img src="~/images/open-iconic/list.svg" alt="View Top Speed Leaderboard" />
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="card border-allin-green mb-3">
            <h5 class="card-header bg-allin-green text-dark">Longest Journey</h5>
            <div class="card-body row">
                <div class="col-2 align-middle">
                    <img src="@Model.Content.LongestSingleDistance.SkaterProfile" alt="@Model.Content.LongestSingleDistance.SkaterName Profile Image" class="leaderboard-profile" />
                </div>
                <div class="col-4 align-middle">
                    @Model.Content.LongestSingleDistance.SkaterName
                </div>
                <div class="col-4 align-middle">
                    @Model.Content.LongestSingleDistance.Statistic
                </div>
                <div class="col-2 align-middle">
                    <a class="btn btn-primary btn-sm" asp-controller="StatisticLeaders" asp-action="Index" asp-route-statisticType="@StatisticType.LongestDistance.ToString()" title="View Longest Journey Leaderboard">
                        <img src="~/images/open-iconic/list.svg" alt="View Longest Journey Leaderboard" />
                    </a>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card border-allin-green mb-3">
            <h5 class="card-header bg-allin-green text-dark">Shortest Journey</h5>
            <div class="card-body row">
                <div class="col-2">
                    <img src="@Model.Content.ShortestSingleDistance.SkaterProfile" alt="@Model.Content.ShortestSingleDistance.SkaterName Profile Image" class="leaderboard-profile" />
                </div>
                <div class="col-4 align-middle">
                    @Model.Content.ShortestSingleDistance.SkaterName
                </div>
                <div class="col-4 align-middle">
                    @Model.Content.ShortestSingleDistance.Statistic
                </div>
                <div class="col-2 align-middle">
                    <a class="btn btn-primary btn-sm" asp-controller="StatisticLeaders" asp-action="Index" asp-route-statisticType="@StatisticType.ShortestDistance.ToString()" title="View Shortest Journey Leaderboard">
                        <img src="~/images/open-iconic/list.svg" alt="View Longest Journey Leaderboard" />
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="card border-allin-green mb-3">
            <h5 class="card-header bg-allin-green text-dark">Longest Total Distance</h5>
            <div class="card-body row">
                <div class="col-2">
                    <img src="@Model.Content.LongestTotalDistance.SkaterProfile" alt="@Model.Content.LongestTotalDistance.SkaterName Profile Image" class="leaderboard-profile" />
                </div>
                <div class="col-4 align-middle">
                    @Model.Content.LongestTotalDistance.SkaterName
                </div>
                <div class="col-4 align-middle">
                    @Model.Content.LongestTotalDistance.Statistic
                </div>
                <div class="col-2 align-middle">
                    <a class="btn btn-primary btn-sm" asp-controller="StatisticLeaders" asp-action="Index" asp-route-statisticType="@StatisticType.LongestTotalJourney.ToString()" title="View Longest Total Distance Leaderboard">
                        <img src="~/images/open-iconic/list.svg" alt="View Longest Journey Leaderboard" />
                    </a>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card border-allin-green mb-3">
            <h5 class="card-header bg-allin-green text-dark">Most Journeys</h5>
            <div class="card-body row">
                <div class="col-2">
                    <img src="@Model.Content.MostJourneys.SkaterProfile" alt="@Model.Content.MostJourneys.SkaterName Profile Image" class="leaderboard-profile" />
                </div>
                <div class="col-4 align-middle">
                    @Model.Content.MostJourneys.SkaterName
                </div>
                <div class="col-4 align-middle">
                    @Model.Content.MostJourneys.Statistic
                </div>
                <div class="col-2 align-middle">
                    <a class="btn btn-primary btn-sm" asp-controller="StatisticLeaders" asp-action="Index" asp-route-statisticType="@StatisticType.MostJourneys.ToString()" title="View Most Journeys Leaderboard">
                        <img src="~/images/open-iconic/list.svg" alt="View Longest Journey Leaderboard" />
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row justify-content-md-center">
    <div class="col-md-6">
        <div class="card border-allin-green mb-3">
            <h5 class="card-header bg-allin-green text-dark">Collective Journeys</h5>
            <div class="card-body">
                <div class="row">
                    <div class="col-7 align-middle">
                        Total Distance:
                    </div>
                    <div class="col-5 align-middle">
                        @Model.Content.TotalKilometres.ToString("F2") kilometres
                    </div>
                </div>
                <div class="row">
                    <div class="col-7 align-middle">
                        Number of Journeys:
                    </div>
                    <div class="col-5 align-middle">
                        @Model.Content.TotalSkateSessions.ToString("F0")
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row mb-3">
    <div class="col-xl-12">
        <div class="card border-allin-green">
            <h5 class="card-header bg-allin-green text-dark">Weekly Summaries</h5>
            <div class="card-body">
                <canvas id="skateMilageChart" style="height: 500px;"></canvas>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="card border-allin-green mb-3">
            <h5 class="card-header bg-allin-green text-dark">Kilometres by Source</h5>
            <div class="card-body">
                <canvas id="milesBySourceChart" style="height: 400px;"></canvas>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card border-allin-green mb-3">
            <h5 class="card-header bg-allin-green text-dark">Journeys by Source</h5>
            <div class="card-body">
                <canvas id="journeysBySourceChart" style="height: 400px;"></canvas>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="card border-allin-green mb-3">
            <h5 class="card-header bg-allin-green text-dark">Activities By Week Day</h5>
            <div class="card-body">
                <canvas id="activitiesByDayChart" style="height: 400px;"></canvas>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card border-allin-green mb-3">
            <h5 class="card-header bg-allin-green text-dark">Kilometres By Week Day</h5>
            <div class="card-body">
                <canvas id="milesByDayChart" style="height: 400px;"></canvas>
            </div>
        </div>
    </div>
</div>

@if (Model.Content.CheckPoints != null && Model.Content.CheckPoints.Any() && Model.Content.PeriodRange == PeriodRange.AllTime)
{
    <div class="row">
        <div class="col-md-12">
            <div class="card border-allin-green mb-3">
                <h5 class="card-header bg-allin-green text-dark">Milestones</h5>
                <div class="card-body">
                    <table class="table table-responsive-lg table-hover table-re">
                        <thead class="thead-dark">
                            <tr>
                                <th scope="col">Milestone</th>
                                <th scope="col">First</th>
                                <th scope="col">Latest</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var checkPoint in Model.Content.CheckPoints)
                            {
                                <tr>
                                    <td class="align-middle" style="width: 30%">@checkPoint.CheckPointName</td>
                                    <td class="align-middle">
                                        @if (!string.IsNullOrWhiteSpace(checkPoint.FirstSkaterProfile))
                                        {
                                            <img src="@checkPoint.FirstSkaterProfile" alt="@checkPoint.FirstSkaterName Profile Image" class="leaderboard-profile mobile-hidden" />
                                        }
                                        @checkPoint.FirstSkaterName
                                    </td>
                                    <td class="align-middle">
                                        @if (!string.IsNullOrWhiteSpace(checkPoint.LatestSkaterProfile))
                                        {
                                            <img src="@checkPoint.LatestSkaterProfile" alt="@checkPoint.LatestSkaterName Profile Image" class="leaderboard-profile mobile-hidden" />
                                        }
                                        @checkPoint.LatestSkaterName
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js"></script>
    <script>
        $(document).ready(function() {

            var ctx1 = document.getElementById('skateMilageChart').getContext('2d');
            var skateMilageChart = new Chart(ctx1,
                {
                    type: 'line',
                    data: {
                        labels: [
                            @Html.Raw(string.Join(',', Model.Content.SkateDistances.Select(x => $"'{x.Date:dd/MM/yy}'")))],
                        datasets: [
                            {
                                label: 'Kilometres Per Week',
                                borderColor: '#9d5feb',
                                backgroundColor: '#9d5feb',
                                fill: false,
                                data: [
                                    @(string.Join(',', Model.Content.SkateDistances.Select(x => x.Value.ToString("F2"))))
                                ]
                            },
                            {
                                label: 'Journeys Per Week',
                                borderColor: '#9d5feb',
                                backgroundColor: '#9d5feb',
                                fill: false,
                                data: [
                                    @(string.Join(',', Model.Content.SkateSessions.Select(x => x.Value.ToString("F2"))))
                                ]
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            xAxes: [
                                {
                                    ticks: {
                                        maxTicksLimit: 10
                                    }
                                }
                            ]
                        }
                    }
                });

            var ctx2 = document.getElementById('milesBySourceChart').getContext('2d');
            var milesBySourceChart = new Chart(ctx2,
                {
                    type: 'pie',
                    data: {
                        labels: ['Strava', 'Manual'],
                        datasets: [
                            {
                                borderColor: ['#FC4C02', '#9d5feb'],
                                backgroundColor: ['#FC4C02', '#9d5feb'],
                                data: [@Model.Content.KilometresByStrava.ToString("F2"), @Model.Content.KilometresByManual.ToString("F2")]
                            }
                        ]
                    }
                });

            var ctx3 = document.getElementById('journeysBySourceChart').getContext('2d');
            var journeysBySourceChart = new Chart(ctx3,
                {
                    type: 'pie',
                    data: {
                        labels: ['Strava', 'Manual'],
                        datasets: [
                            {
                                borderColor: ['#FC4C02', '#9d5feb'],
                                backgroundColor: ['#FC4C02', '#9d5feb'],
                                data: [@Model.Content.JourneysByStrava, @Model.Content.JourneysByManual]
                            }
                        ]
                    }
                });

            var ctx4 = document.getElementById('activitiesByDayChart').getContext('2d');
            var activitiesByDayChart = new Chart(ctx4,
                {
                    type: 'bar',
                    data: {
                        labels: [ 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday' ],
                        datasets: [
                            {
                                label: 'Activities by Week Day',
                                borderColor: ['#9d5feb', '#9d5feb', '#9d5feb', '#9d5feb', '#9d5feb', '#9d5feb', '#9d5feb'],
                                backgroundColor: ['#9d5feb', '#9d5feb', '#9d5feb', '#9d5feb', '#9d5feb', '#9d5feb', '#9d5feb'],
                                data: [@(string.Join(',', Model.Content.ActivitiesByDay.OrderBy(x => x.DayOfWeek).Select(x => x.Value.ToString("F2"))))]
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        legend: {
                            display: false
                        },
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        }
                    }
                });

            var ctx5 = document.getElementById('milesByDayChart').getContext('2d');
            var milesByDayChart = new Chart(ctx5,
                {
                    type: 'bar',
                    data: {
                        labels: [ 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday' ],
                        datasets: [
                            {
                                label: 'Kilometres by Week Day',
                                borderColor: ['#9d5feb', '#9d5feb', '#9d5feb', '#9d5feb', '#9d5feb', '#9d5feb', '#9d5feb'],
                                backgroundColor: ['#9d5feb', '#9d5feb', '#9d5feb', '#9d5feb', '#9d5feb', '#9d5feb', '#9d5feb'],
                                data: [@(string.Join(',', Model.Content.KilometresByDay.OrderBy(x => x.DayOfWeek).Select(x => x.Value.ToString("F2"))))]
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        legend: {
                            display: false
                        },
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        }
                    }
                });
        });
    </script>
}